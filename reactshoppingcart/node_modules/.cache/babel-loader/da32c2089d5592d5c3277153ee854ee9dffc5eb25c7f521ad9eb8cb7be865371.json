{"ast":null,"code":"import { useState, useContext, useReducer, useEffect, createElement, createContext } from 'react';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction useLocalStorage(key, initialValue) {\n  var _React$useState = useState(function () {\n      try {\n        var item = typeof window !== \"undefined\" && window.localStorage.getItem(key);\n        return item ? item : initialValue;\n      } catch (error) {\n        return initialValue;\n      }\n    }),\n    storedValue = _React$useState[0],\n    setStoredValue = _React$useState[1];\n  var setValue = function setValue(value) {\n    try {\n      var valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\nvar initialState = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {}\n};\nvar CartContext = /*#__PURE__*/createContext(initialState);\nvar createCartIdentifier = function createCartIdentifier(len) {\n  if (len === void 0) {\n    len = 12;\n  }\n  return [].concat(Array(len)).map(function () {\n    return (~~(Math.random() * 36)).toString(36);\n  }).join(\"\");\n};\nvar useCart = function useCart() {\n  var context = useContext(CartContext);\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n  return context;\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n    case \"ADD_ITEM\":\n      {\n        var items = [].concat(state.items, [action.payload]);\n        return generateCartState(state, items);\n      }\n    case \"UPDATE_ITEM\":\n      {\n        var _items = state.items.map(function (item) {\n          if (item.id !== action.id) return item;\n          return _extends({}, item, action.payload);\n        });\n        return generateCartState(state, _items);\n      }\n    case \"REMOVE_ITEM\":\n      {\n        var _items2 = state.items.filter(function (i) {\n          return i.id !== action.id;\n        });\n        return generateCartState(state, _items2);\n      }\n    case \"EMPTY_CART\":\n      return initialState;\n    case \"CLEAR_CART_META\":\n      return _extends({}, state, {\n        metadata: {}\n      });\n    case \"SET_CART_META\":\n      return _extends({}, state, {\n        metadata: _extends({}, action.payload)\n      });\n    case \"UPDATE_CART_META\":\n      return _extends({}, state, {\n        metadata: _extends({}, state.metadata, action.payload)\n      });\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\nvar generateCartState = function generateCartState(state, items) {\n  if (state === void 0) {\n    state = initialState;\n  }\n  var totalUniqueItems = calculateUniqueItems(items);\n  var isEmpty = totalUniqueItems === 0;\n  return _extends({}, initialState, state, {\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems: totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty: isEmpty\n  });\n};\nvar calculateItemTotals = function calculateItemTotals(items) {\n  return items.map(function (item) {\n    return _extends({}, item, {\n      itemTotal: item.price * item.quantity\n    });\n  });\n};\nvar calculateTotal = function calculateTotal(items) {\n  return items.reduce(function (total, item) {\n    return total + item.quantity * item.price;\n  }, 0);\n};\nvar calculateTotalItems = function calculateTotalItems(items) {\n  return items.reduce(function (sum, item) {\n    return sum + item.quantity;\n  }, 0);\n};\nvar calculateUniqueItems = function calculateUniqueItems(items) {\n  return items.length;\n};\nvar CartProvider = function CartProvider(_ref) {\n  var children = _ref.children,\n    cartId = _ref.id,\n    _ref$defaultItems = _ref.defaultItems,\n    defaultItems = _ref$defaultItems === void 0 ? [] : _ref$defaultItems,\n    onSetItems = _ref.onSetItems,\n    onItemAdd = _ref.onItemAdd,\n    onItemUpdate = _ref.onItemUpdate,\n    onItemRemove = _ref.onItemRemove,\n    _ref$storage = _ref.storage,\n    storage = _ref$storage === void 0 ? useLocalStorage : _ref$storage,\n    metadata = _ref.metadata;\n  var id = cartId ? cartId : createCartIdentifier();\n  var _storage = storage(cartId ? \"react-use-cart-\" + id : \"react-use-cart\", JSON.stringify(_extends({\n      id: id\n    }, initialState, {\n      items: defaultItems,\n      metadata: metadata\n    }))),\n    savedCart = _storage[0],\n    saveCart = _storage[1];\n  var _React$useReducer = useReducer(reducer, JSON.parse(savedCart)),\n    state = _React$useReducer[0],\n    dispatch = _React$useReducer[1];\n  useEffect(function () {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n  var setItems = function setItems(items) {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(function (item) {\n        return _extends({}, item, {\n          quantity: item.quantity || 1\n        });\n      })\n    });\n    onSetItems && onSetItems(items);\n  };\n  var addItem = function addItem(item, quantity) {\n    if (quantity === void 0) {\n      quantity = 1;\n    }\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\n    if (quantity <= 0) return;\n    var currentItem = state.items.find(function (i) {\n      return i.id === item.id;\n    });\n    if (!currentItem && !item.hasOwnProperty(\"price\")) throw new Error(\"You must pass a `price` for new items\");\n    if (!currentItem) {\n      var _payload = _extends({}, item, {\n        quantity: quantity\n      });\n      dispatch({\n        type: \"ADD_ITEM\",\n        payload: _payload\n      });\n      onItemAdd && onItemAdd(_payload);\n      return;\n    }\n    var payload = _extends({}, item, {\n      quantity: currentItem.quantity + quantity\n    });\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: item.id,\n      payload: payload\n    });\n    onItemUpdate && onItemUpdate(payload);\n  };\n  var updateItem = function updateItem(id, payload) {\n    if (!id || !payload) {\n      return;\n    }\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: id,\n      payload: payload\n    });\n    onItemUpdate && onItemUpdate(payload);\n  };\n  var updateItemQuantity = function updateItemQuantity(id, quantity) {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(id);\n      dispatch({\n        type: \"REMOVE_ITEM\",\n        id: id\n      });\n      return;\n    }\n    var currentItem = state.items.find(function (item) {\n      return item.id === id;\n    });\n    if (!currentItem) throw new Error(\"No such item to update\");\n    var payload = _extends({}, currentItem, {\n      quantity: quantity\n    });\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: id,\n      payload: payload\n    });\n    onItemUpdate && onItemUpdate(payload);\n  };\n  var removeItem = function removeItem(id) {\n    if (!id) return;\n    dispatch({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n    onItemRemove && onItemRemove(id);\n  };\n  var emptyCart = function emptyCart() {\n    return dispatch({\n      type: \"EMPTY_CART\"\n    });\n  };\n  var getItem = function getItem(id) {\n    return state.items.find(function (i) {\n      return i.id === id;\n    });\n  };\n  var inCart = function inCart(id) {\n    return state.items.some(function (i) {\n      return i.id === id;\n    });\n  };\n  var clearCartMetadata = function clearCartMetadata() {\n    dispatch({\n      type: \"CLEAR_CART_META\"\n    });\n  };\n  var setCartMetadata = function setCartMetadata(metadata) {\n    if (!metadata) return;\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata\n    });\n  };\n  var updateCartMetadata = function updateCartMetadata(metadata) {\n    if (!metadata) return;\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata\n    });\n  };\n  return createElement(CartContext.Provider, {\n    value: _extends({}, state, {\n      getItem: getItem,\n      inCart: inCart,\n      setItems: setItems,\n      addItem: addItem,\n      updateItem: updateItem,\n      updateItemQuantity: updateItemQuantity,\n      removeItem: removeItem,\n      emptyCart: emptyCart,\n      clearCartMetadata: clearCartMetadata,\n      setCartMetadata: setCartMetadata,\n      updateCartMetadata: updateCartMetadata\n    })\n  }, children);\n};\nexport { CartProvider, createCartIdentifier, initialState, useCart };","map":{"version":3,"mappings":"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","names":["useLocalStorage","key","initialValue","React","item","window","localStorage","getItem","error","storedValue","setStoredValue","setValue","value","valueToStore","Function","setItem","console","log","initialState","items","isEmpty","totalItems","totalUniqueItems","cartTotal","metadata","CartContext","createCartIdentifier","len","Array","map","Math","random","toString","join","useCart","context","Error","reducer","state","action","type","generateCartState","payload","id","filter","i","calculateUniqueItems","calculateItemTotals","calculateTotalItems","calculateTotal","itemTotal","price","quantity","reduce","total","sum","length","CartProvider","children","cartId","defaultItems","onSetItems","onItemAdd","onItemUpdate","onItemRemove","storage","JSON","stringify","savedCart","saveCart","parse","dispatch","setItems","addItem","currentItem","find","hasOwnProperty","updateItem","updateItemQuantity","removeItem","emptyCart","inCart","some","clearCartMetadata","setCartMetadata","updateCartMetadata","Provider"],"sources":["C:\\Users\\malro\\source\\repos\\CSCE361CapStoneG5\\reactShoppingCart\\node_modules\\react-use-cart\\src\\useLocalStorage.ts","C:\\Users\\malro\\source\\repos\\CSCE361CapStoneG5\\reactShoppingCart\\node_modules\\react-use-cart\\src\\index.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string\n): [string, (value: Function | string) => void] {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item =\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\n\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: Function | string) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import * as React from \"react\";\n\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport interface Item {\n  id: string;\n  price: number;\n  quantity?: number;\n  itemTotal?: number;\n  [key: string]: any;\n}\n\ninterface InitialState {\n  id: string;\n  items: Item[];\n  isEmpty: boolean;\n  totalItems: number;\n  totalUniqueItems: number;\n  cartTotal: number;\n  metadata?: Metadata;\n}\n\nexport interface Metadata {\n  [key: string]: any;\n}\n\ninterface CartProviderState extends InitialState {\n  addItem: (item: Item, quantity?: number) => void;\n  removeItem: (id: Item[\"id\"]) => void;\n  updateItem: (id: Item[\"id\"], payload: object) => void;\n  setItems: (items: Item[]) => void;\n  updateItemQuantity: (id: Item[\"id\"], quantity: number) => void;\n  emptyCart: () => void;\n  getItem: (id: Item[\"id\"]) => any | undefined;\n  inCart: (id: Item[\"id\"]) => boolean;\n  clearCartMetadata: () => void;\n  setCartMetadata: (metadata: Metadata) => void;\n  updateCartMetadata: (metadata: Metadata) => void;\n}\n\nexport type Actions =\n  | { type: \"SET_ITEMS\"; payload: Item[] }\n  | { type: \"ADD_ITEM\"; payload: Item }\n  | { type: \"REMOVE_ITEM\"; id: Item[\"id\"] }\n  | {\n      type: \"UPDATE_ITEM\";\n      id: Item[\"id\"];\n      payload: object;\n    }\n  | { type: \"EMPTY_CART\" }\n  | { type: \"CLEAR_CART_META\" }\n  | { type: \"SET_CART_META\"; payload: Metadata }\n  | { type: \"UPDATE_CART_META\"; payload: Metadata };\n\nexport const initialState: any = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {},\n};\n\nconst CartContext = React.createContext<CartProviderState | undefined>(\n  initialState\n);\n\nexport const createCartIdentifier = (len = 12) =>\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\n\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n\n  return context;\n};\n\nfunction reducer(state: CartProviderState, action: Actions) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\": {\n      const items = [...state.items, action.payload];\n\n      return generateCartState(state, items);\n    }\n\n    case \"UPDATE_ITEM\": {\n      const items = state.items.map((item: Item) => {\n        if (item.id !== action.id) return item;\n\n        return {\n          ...item,\n          ...action.payload,\n        };\n      });\n\n      return generateCartState(state, items);\n    }\n\n    case \"REMOVE_ITEM\": {\n      const items = state.items.filter((i: Item) => i.id !== action.id);\n\n      return generateCartState(state, items);\n    }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return {\n        ...state,\n        metadata: {},\n      };\n\n    case \"SET_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...action.payload,\n        },\n      };\n\n    case \"UPDATE_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...state.metadata,\n          ...action.payload,\n        },\n      };\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nconst generateCartState = (state = initialState, items: Item[]) => {\n  const totalUniqueItems = calculateUniqueItems(items);\n  const isEmpty = totalUniqueItems === 0;\n\n  return {\n    ...initialState,\n    ...state,\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty,\n  };\n};\n\nconst calculateItemTotals = (items: Item[]) =>\n  items.map(item => ({\n    ...item,\n    itemTotal: item.price * item.quantity!,\n  }));\n\nconst calculateTotal = (items: Item[]) =>\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\n\nconst calculateTotalItems = (items: Item[]) =>\n  items.reduce((sum, item) => sum + item.quantity!, 0);\n\nconst calculateUniqueItems = (items: Item[]) => items.length;\n\nexport const CartProvider: React.FC<{\n  children?: React.ReactNode;\n  id?: string;\n  defaultItems?: Item[];\n  onSetItems?: (items: Item[]) => void;\n  onItemAdd?: (payload: Item) => void;\n  onItemUpdate?: (payload: object) => void;\n  onItemRemove?: (id: Item[\"id\"]) => void;\n  storage?: (\n    key: string,\n    initialValue: string\n  ) => [string, (value: Function | string) => void];\n  metadata?: Metadata;\n}> = ({\n  children,\n  id: cartId,\n  defaultItems = [],\n  onSetItems,\n  onItemAdd,\n  onItemUpdate,\n  onItemRemove,\n  storage = useLocalStorage,\n  metadata,\n}) => {\n  const id = cartId ? cartId : createCartIdentifier();\n\n  const [savedCart, saveCart] = storage(\n    cartId ? `react-use-cart-${id}` : `react-use-cart`,\n    JSON.stringify({\n      id,\n      ...initialState,\n      items: defaultItems,\n      metadata,\n    })\n  );\n\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedCart));\n  React.useEffect(() => {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  const setItems = (items: Item[]) => {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(item => ({\n        ...item,\n        quantity: item.quantity || 1,\n      })),\n    });\n\n    onSetItems && onSetItems(items);\n  };\n\n  const addItem = (item: Item, quantity = 1) => {\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\n    if (quantity <= 0) return;\n\n    const currentItem = state.items.find((i: Item) => i.id === item.id);\n\n    if (!currentItem && !item.hasOwnProperty(\"price\"))\n      throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      const payload = { ...item, quantity };\n\n      dispatch({ type: \"ADD_ITEM\", payload });\n\n      onItemAdd && onItemAdd(payload);\n\n      return;\n    }\n\n    const payload = { ...item, quantity: currentItem.quantity + quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: item.id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItem = (id: Item[\"id\"], payload: object) => {\n    if (!id || !payload) {\n      return;\n    }\n\n    dispatch({ type: \"UPDATE_ITEM\", id, payload });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItemQuantity = (id: Item[\"id\"], quantity: number) => {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(id);\n\n      dispatch({ type: \"REMOVE_ITEM\", id });\n\n      return;\n    }\n\n    const currentItem = state.items.find((item: Item) => item.id === id);\n\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    const payload = { ...currentItem, quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const removeItem = (id: Item[\"id\"]) => {\n    if (!id) return;\n\n    dispatch({ type: \"REMOVE_ITEM\", id });\n\n    onItemRemove && onItemRemove(id);\n  };\n\n  const emptyCart = () =>\n    dispatch({\n      type: \"EMPTY_CART\",\n    });\n\n  const getItem = (id: Item[\"id\"]) =>\n    state.items.find((i: Item) => i.id === id);\n\n  const inCart = (id: Item[\"id\"]) => state.items.some((i: Item) => i.id === id);\n\n  const clearCartMetadata = () => {\n    dispatch({\n      type: \"CLEAR_CART_META\",\n    });\n  };\n\n  const setCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  const updateCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        getItem,\n        inCart,\n        setItems,\n        addItem,\n        updateItem,\n        updateItemQuantity,\n        removeItem,\n        emptyCart,\n        clearCartMetadata,\n        setCartMetadata,\n        updateCartMetadata,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}